PROCEDURE      JS.GLOBAL_JS:T  (157561,40784)  |Last amended Mar 04, 2014,11:19:44
program
. open globaljs /write lrecl = 600 IOSTAT =  IOSTAT__4
. ifNOTthen (IOSTAT__4 eq 0)
.   write 'Error creating global js filee: ' IOSTAT__4
.   exit program
. endif

write(globaljs) 'var timer = 0,'
write(globaljs) '    timerIsOn = 1,'
write(globaljs) '    statusMessageCount = 0,'
write(globaljs) '    timerNumber;'


write(globaljs) 'function setLogOutTimer() {'
write(globaljs) '     //the interval timer is set as soon as the page loads'
write(globaljs) '     // 10000 indicates how many milliseconds the timer be set to.'
write(globaljs) '     //Eg: to set it to 5 mins, calculate 5min= 5x60=300 sec = 300,000 millisec. So set it to 3000000'
write(globaljs) '     timer = setInterval("autoLogOut()", 6000000);'
write(globaljs) '}'

write(globaljs) 'function resetLogOutTimer() {'
write(globaljs) '     //resets the timer. The timer is reset on each of the below events:'
write(globaljs) '     // 1. mousemove   2. mouseclick   3. key press 4. scroliing'
write(globaljs) '     //first step: clear the existing timer'
write(globaljs) '     //second step: implement the timer again'
write(globaljs) '     var someInt;'
write(globaljs) '     someInt = window.clearInterval(timer);'
write(globaljs) '     timer = setInterval("autoLogOut()", 50000000);'  | GET RID OF TWO ZEROS FOR PRODUCTION MODEL
write(globaljs) '}'

write(globaljs) 'function stopCount() {'
write(globaljs) '     clearTimeout(timerNumber);'
write(globaljs) '     timerIsOn = 0;'
write(globaljs) '}'

write(globaljs) 'function autoLogOut() {window.location = "/logout.html"; }'

c disable enter key
write(globaljs) 'function disableEnterKey(e) {'
write(globaljs) '     var whatKey;'
write(globaljs) '     if (window.event) {'
write(globaljs) '          if (window.event.keyCode === 13) {window.event.keyCode = 9; } ' | change for IE to move to next field using tab
write(globaljs) '          whatKey = window.event.keyCode;'
write(globaljs) '     } //IE'
write(globaljs) '     else {whatKey = e.which; } //firefox'
write(globaljs) '     if (whatKey === 13) {return false; }'
write(globaljs) '     else {return true;}'
write(globaljs) '}'

write(globaljs) 'function setLoadingOff() {'
write(globaljs) '     stopCount();'
write(globaljs) '     document.getElementById("statusblock").style.visibility = "hidden";'
write(globaljs) '}'

write(globaljs) 'function statusMessage(strText) {'
write(globaljs) '     "use strict";'
write(globaljs) '     var strDots;'
write(globaljs) '     if (timerIsOn === 1) {'
write(globaljs) '          statusMessageCount = statusMessageCount + 1;'
write(globaljs) '          timerNumber = setTimeout("statusMessage(strText)", 300);'
write(globaljs) '          if (statusMessageCount === 1) {'
write(globaljs) '               strDots = ".";'
write(globaljs) '          }'
write(globaljs) '          else if (statusMessageCount === 2) {'
write(globaljs) '               strDots = "..";'
write(globaljs) '          }'
write(globaljs) '          else if (statusMessageCount === 3) {'
write(globaljs) '               strDots = ".....";'
write(globaljs) '          }'
write(globaljs) '          else {'
write(globaljs) '               strDots = ".......";'
write(globaljs) '               statusMessageCount = 0;'
write(globaljs) '          }'
write(globaljs) '          document.getElementById("statusblock").innerHTML = strText + strDots;'
write(globaljs) '     }'
write(globaljs) '}'




write(globaljs) 'function showhide(idName) {'
write(globaljs) '     var someStyle = document.getElementById(idName).style.display;'
write(globaljs) '     if (someStyle === "" || someStyle === "block") { document.getElementById(idName).style.display = "none"; }'
write(globaljs) '     if (someStyle === "none") { document.getElementById(idName).style.display = "block"; }'
write(globaljs) '}'

write(globaljs) 'function changesign(idName) {'
write(globaljs) '     var someText = document.getElementById(idName).innerHTML;'
write(globaljs) '     if (someText === "+") {document.getElementById(idName).innerHTML = "-"; }'
write(globaljs) '     if (someText === "-") {document.getElementById(idName).innerHTML = "+"; }'
write(globaljs) '}'

write(globaljs) 'function hideById(idName) {'
write(globaljs) '     document.getElementById(idName).style.display = "none";'
write(globaljs) '}'


write(globaljs) 'function setVarNum() {'
write(globaljs) '     document.getElementById("webvnum").value = document.getElementById("varselect").selectedIndex + 1;'
write(globaljs) '}'

write(globaljs) 'function testNotBlank(myField,alerttxt) {'
write(globaljs)  '    var myField;'
write(globaljs) '    if (myField.value === null || myField.value === "") {'
write(globaljs) '         alert(alerttxt); return false;'
write(globaljs) '    }'
write(globaljs) '    else if (myField.value === "ID") {'
write(globaljs) '         alert(alerttxt); return false; '
write(globaljs) '    }'
write(globaljs) '    else { '
write(globaljs) '         return true;'
write(globaljs) '    }'
write(globaljs) '}'/


write(globaljs) 'function caseRequired() {'
write(globaljs) '    if (document.getElementById(''member'').value === "WPF.CONTROLLER.CASE_CONTROL") {'
write(globaljs) '         if (testNotBlank(caseis, "Please enter a CASE ID!") === false) {'
write(globaljs) '             document.getElementById(''caseis'').focus();'
write(globaljs) '             return false;'
write(globaljs) '         }'
write(globaljs) '     }'
write(globaljs) '}' /

write(globaljs) 'function pressedSave() {'
write(globaljs) '     document.getElementById("b_saverec").style.disabled = true;'
write(globaljs) '}'
write(globaljs) 'function serverRequest(messageText) {'
write(globaljs) '     timerIsOn = 1;'
write(globaljs) '     document.getElementById("statusblock").innerHTML = messageText;'
write(globaljs) '     document.getElementById("statusblock").style.visibility = "visible";'
write(globaljs) '     statusMessage(messageText);'
write(globaljs) '}'


write(globaljs) 'function SelectValueByList(listItem, myField) {'
write(globaljs) '     document.getElementById(myField).value = listItem.value;'
write(globaljs) '}'


write(globaljs) 'function SelectListByValue(myField, listItem) {'
write(globaljs) '     var fieldValue = document.getElementById(myField).value,'
write(globaljs) '         someInt = 0,'
write(globaljs) '         selectValue = document.getElementById(listItem);'
write(globaljs) '     document.getElementById(listItem).selectedIndex = 0;'
write(globaljs) '     while ((selectValue.options[someInt].value !== fieldValue) && (someInt < selectValue.options.length - 1)) {someInt ++; }' |i think the squirlies went here for the while statement.
write(globaljs) '     if (selectValue.options[someInt].value === fieldValue) {document.getElementById(listItem).selectedIndex = someInt; }'
write(globaljs) '}'

write(globaljs) 'function newkeys (myField, keyfield) {'
write(globaljs)  '     var myField;'
write(globaljs) '     keyfield.value = myField.value;'
write(globaljs) '}' /


C 1ST GO TO THE CONFIMR CASE DELETION PAGE.  (case can not actually be deleted)
write(globaljs) 'function confirmDelCase (messageText) {'
write(globaljs) '     var answer = confirm("Delete this ID?");'
write(globaljs) '     if (!answer) {return false; }'
write(globaljs) '     else'
write(globaljs) '          {document.getElementById("member").value = "WPF.INC_BODY_FORMS.CASE_DEL_CONFIRM"; }'
write(globaljs) '}'

write(globaljs) 'function confirmDelRec (messageText) {'
write(globaljs) '    var answer = confirm("Delete this record?");'
write(globaljs) '    if (!answer) {return false; }'
write(globaljs) '}'
C THIS JAVASCRIPT WILL CONTINUE TO THE CASE DELETION PROGRAM
write(globaljs) 'function reasonBlank (messageText) {'
write(globaljs) '    var answer = document.getElementById("reason").value;'
write(globaljs) '    if (!answer)'
write(globaljs) '        {alert ("Reason is Required"); return false; }'
write(globaljs) '    else{'
write(globaljs) '        answer = confirm("Delete this ID?");'
write(globaljs) '        if (!answer) { return false; }'
write(globaljs) '        else'
write(globaljs) '           {document.getElementById("member").value = "WPF.DB_UPDATE.CASE_DEL"; }'
write(globaljs) '    }'
write(globaljs) '}'


write(globaljs) 'function varOut() {'
write(globaljs) '}'

write(globaljs) 'function checkVar(varname, m1, m2, m3, vtype, vformat, nmin, nmax) {'
write(globaljs) '    var varValue = document.getElementById(varname).value,'
write(globaljs) '        goOn = 1;'
write(globaljs) '    if (varValue === m1) {goOn = 2;}'
write(globaljs) '    if (varValue === m2) {goOn = 2;}'
write(globaljs) '    if (varValue === m3) {goOn = 2;}'
write(globaljs) '    if (goOn !== 2) {'
write(globaljs) '        if (vtype === 1 )      {}  // string '
write(globaljs) '        else if (vtype === 2 ) {}  // cat '
write(globaljs) '        else if (vtype === 3 ) {   // date'
write(globaljs) '           if (isDate(varValue, vformat) === false) {'
write(globaljs) '              alert("Please enter in a valid date");'
write(globaljs) '              goOn = 0;'
write(globaljs) '           }'
write(globaljs) '        }'
write(globaljs) '        else if (vtype === 4 ) {}  // time'
write(globaljs) '        else if (vtype === 5 ) {   // int'
write(globaljs) '           if (checkInteger (varValue, nmin, nmax, vformat) === false) {'
write(globaljs) '              goOn = 0;'
write(globaljs) '           }'
write(globaljs) '           if (checkRange (varValue, nmin, nmax, vformat) === false) {'
write(globaljs) '              goOn = 0;'
write(globaljs) '           }'
write(globaljs) '        }'
write(globaljs) '        else if (vtype >= 6 ) {   // Decimals'
write(globaljs) '           if (checkRange (varValue, nmin, nmax, vformat) === false) {'
write(globaljs) '              goOn = 0;'
write(globaljs) '           }'
write(globaljs) '        }'
write(globaljs) '        else {alert(vtype + " else"); goOn = 0; }  // should never see this'
write(globaljs) '    }'
write(globaljs) '    if (goOn === 1 || goOn ===2 )      {'
write(globaljs) '        goOn = 1; '
write(globaljs) '        varOut(varname);'
write(globaljs) '    }'
write(globaljs) '    else {'
write(globaljs) '        window.setTimeout(function() {document.getElementById(varname).focus(); }, 100);'
write(globaljs) '        return false;'
write(globaljs) '    }'
write(globaljs) '} '
write(globaljs) //

write(globaljs) 'function checkInteger (varValue, nmin, nmax, vformat) { '
write(globaljs) '    if (varValue.length === 0) { return; }'
write(globaljs) '    if (parseInt(varValue,10) !== varValue - 0) {'
write(globaljs) '        alert (varValue + " Please check: Not an integer!");'
write(globaljs) '        return false;'
write(globaljs) '    }'
write(globaljs) '} '
write(globaljs) //
write(globaljs) 'function checkRange (varValue, nmin, nmax, vformat) { '
write(globaljs) '    if (varValue.length === 0) {return; }'
write(globaljs) '    if (nmin !== "") {'
write(globaljs) '        if (parseInt(varValue,10) < nmin) {'
write(globaljs) '            alert ("Please check: "+ varValue + " is less than the min: "+ nmin);'
write(globaljs) '            return false;'
write(globaljs) '        }'
write(globaljs) '    }'
write(globaljs) '    if (nmax !== "") {'
write(globaljs) '        if (parseInt(varValue,10) > nmax) {'
write(globaljs) '            alert ("Please check: " + varValue + " is bigger than the max: " + nmax);'
write(globaljs) '            return false;'
write(globaljs) '        }'
write(globaljs) '    }'
write(globaljs) '    if (parseInt(vformat.substr(1),10) < varValue.length) {'
write(globaljs) '        alert ("info: " + vformat.substr(1));'
write(globaljs) '        alert ("Please check: Too many digits! " + varValue);'
write(globaljs) '        return false;'
write(globaljs) '    }'
write(globaljs) '} '

write(globaljs) 'function isDate(someValue,vformat) {'
write(globaljs) '// make sure it is in the expected format'
write(globaljs) '    if (vformat === "MM/DD/YYYY") {'
write(globaljs) '        if (someValue.search(/^\d{1,2}[\/|\-|\.|_]\d{1,2}[\/|\-|\.|_]\d{4}/g) != 0)'
write(globaljs) '             {return false;}'

write(globaljs) '//      remove other separators that are not valid with the Date class'
write(globaljs) '        someValue = someValue.replace(/[\-|\.|_]/g, "/");'

write(globaljs) '//      convert it into a date instance'
write(globaljs) '        var dt = new Date(Date.parse(someValue));'

write(globaljs) '//      check the components of the date'
write(globaljs) '//      since Date instance automatically rolls over each component'
write(globaljs) '        var arrDateParts = someValue.split("/");'
write(globaljs) '        return ('
write(globaljs) '             dt.getMonth() == arrDateParts[0]-1 &&'
write(globaljs) '             dt.getDate() == arrDateParts[1] &&'
write(globaljs) '             dt.getFullYear() == arrDateParts[2]'
write(globaljs) '        );'
write(globaljs) '    }'
write(globaljs) '    if (vformat === "MM/YYYY") {'
write(globaljs) '        if (someValue.search(/^\d{1,2}[\/|\-|\.|_]\d{4}/g) != 0)'
write(globaljs) '            {return false;}'
write(globaljs) '    }'
write(globaljs) '}'




CIF EQ 1,2
write(globaljs) 'function varOut(varname) {'
write(globaljs) '    if (varname === "WILLBE1") {'  | only apply it to mm/yyyy SIR defined dates
write(globaljs) '         var testValue = document.getElementById(varname).value'
write(globaljs) '         if (testValue === 0 || testValue === -1 || testValue === -2 || testValue === -3) {'
write(globaljs) '             document.getElementById("PRESENT1").value = "0";'
write(globaljs) '             document.getElementById("PRESENT1").readOnly = true;'
write(globaljs) '             document.getElementById("PRESENT1").tabIndex = "-1"'
write(globaljs) '             SelectListByValue("PRESENT1", "PRESENT1_list")'
write(globaljs) '             document.getElementById("PRESENT1_list").disabled = true;'
write(globaljs) '             document.getElementById("TOPIC1").value = "";'
write(globaljs) '             document.getElementById("TOPIC1").readOnly = true;'
write(globaljs) '             document.getElementById("NOTE1").value = "";'
write(globaljs) '             document.getElementById("NOTE1").readOnly = true;'
write(globaljs) '    }'
write(globaljs) '    else {'
write(globaljs) '         document.getElementById("PRESENT1").readOnly = false;'
write(globaljs) '         document.getElementById("PRESENT1_list").disabled = false;'
write(globaljs) '         document.getElementById("TOPIC1").readOnly = false;'
write(globaljs) '         document.getElementById("NOTE1").readOnly = false;'
write(globaljs) '    }'
write(globaljs) '  }'
write(globaljs) '} '
CIF END

c if the session ID cookie doesn't match up, send user to logged out page.
write(globaljs) 'function checkCookies() {'
write(globaljs) '    var useridVar  = getCookie(''USER_ID''),'
write(globaljs) '        sessionVar = getCookie(''SESSION_ID'');'
write(globaljs) '    if (useridVar === null || useridVar === "") { autoLogOut();return; }'
write(globaljs) '    if (useridVar === "loggedOut") { autoLogOut();return; }'
write(globaljs) '    if (sessionVar === null || sessionVar === "") { autoLogOut();return; }'
write(globaljs) '    if (sessionVar === "loggedOut") { autoLogOut();return; }'
write(globaljs) '}'


write(globaljs) 'function setCookie(c_name, valueX, expiredays, path, domain, secure ) {'
write(globaljs) '    var exdate = new Date();'
write(globaljs) '        cookie_string = c_name + "=" + escape ( valueX );'
write(globaljs) '    exdate.setDate(exdate.getDate() + expiredays);'
write(globaljs) '    if ( expiredays )'
write(globaljs) '       {cookie_string += "; expires=" + exdate.toUTCString(); }'
write(globaljs) '    else'
write(globaljs) '       {cookie_string += "; expires=" + escape ( expiredays ); }'
write(globaljs) '    if ( path )'
write(globaljs) '       {cookie_string += "; path=" + escape ( path ); }'
write(globaljs) '    else'
write(globaljs) '       {cookie_string += "; path=/"; }'
write(globaljs) '    if ( domain )'
write(globaljs) '       {cookie_string += "; domain=" + escape ( domain ); }'
write(globaljs) '    if ( secure )'
write(globaljs) '       {cookie_string += "; secure"; }'
write(globaljs) '    document.cookie = cookie_string;'
write(globaljs) '}'
write(globaljs) 'function getCookie(c_name) {'
write(globaljs) '    var c_start, c_end;'
write(globaljs) '    if (document.cookie.length > 0) {'
write(globaljs) '        c_start=document.cookie.indexOf(c_name + "=");'
write(globaljs) '        if (c_start !== -1) {'
write(globaljs) '            c_start = c_start + c_name.length + 1;'
write(globaljs) '            c_end = document.cookie.indexOf(";", c_start);'
write(globaljs) '            if (c_end === -1) {c_end = document.cookie.length;}'
write(globaljs) '            return unescape(document.cookie.substring(c_start, c_end));'
write(globaljs) '        }'
write(globaljs) '    }'
write(globaljs) '    return "";'
write(globaljs) '}'
write(globaljs) 'function delete_cookie ( c_name ) {'
write(globaljs) '    var cookie_date = new Date ( );  // current date & time'
write(globaljs) '    cookie_date.setTime ( cookie_date.getTime() - 1 );'
write(globaljs) '    document.cookie = c_name += "=; expires=" + cookie_date.toGMTString();'
write(globaljs) '}'
write(globaljs) 'function limitText(limitField, limitCount, limitNum) {'
write(globaljs) '    if (limitField.value.length > limitNum) {'
write(globaljs) '  limitField.value  = limitField.value.substring(0, limitNum);'
write(globaljs) '    }'
write(globaljs) '    else {'
write(globaljs) '  document.getElementById(limitCount).innerHTML = limitNum - limitField.value.length;'
write(globaljs) '    }'
write(globaljs) '}'

close globaljs

end program
END PROCEDURE
