PROCEDURE      P_SECURITY.CHECK_PW:T  (157542,67712)  |Last amended Feb 13, 2014,18:48:32
| checks user name and password.
| if matched assigns a unique user ID.
| session ID is created after user is directed to a database (has 1DB) or selects a DB (Many DBS)


retrieval crwarn
. CALL WPF.SYSTEM.DEFINE_VARS
. CALL WPF.SYSTEM.INI_VARS
. GOON__4  = 0
. ANY_NUM__4 = numbr(format(today(0)) + format(now(0)))
. USER_NAME__4 = trimlr(cgivarpn('USER_NAME'))
. PASSWORD__4 = trimlr(cgivarpn('password'))
. for EACH_LETTER = 1, len(USER_NAME__4 )
.   ANY_NUM__4 = ANY_NUM__4 + ichar(substr(USER_NAME__4, EACH_LETTER, 1))
. end for
. USER_NAME__4 = trimlr(cgivarpn('USER_NAME'))
. PASSWORD__4 = trimlr(cgivarpn('password'))
. STR$1 = ''

. process rec LOGIN_INFO VIA (USER_NAME__4 )
.   ifthen (PASSWORD__4 eq PW)
      ANY_NUM__4 =  globaln('GOON__4', 1)
.     ANY_NUM__4 =  globals("USER_NAME", USER_NAME)
.     USER_ID = ''
.     ANY_NUM__4 = today(0)
.     ANY_NUM__4 = rand(ANY_NUM__4) * 1103515245  + 12345
.     STR$1 = format(ANY_NUM__4 )
.     ANY_NUM__4 = now(0)
.     ANY_NUM__4 = rand(ANY_NUM__4) * 1103515245  + 12345
.     STR$1 = STR$1 + format(ANY_NUM__4 )
.     ANY_NUM__4 = today(0) + now(0)
.     ANY_NUM__4 = rand(ANY_NUM__4) * 1103515245  + 12345
.     STR$1 = STR$1 + format(ANY_NUM__4 )
.     STR$1 = replace(STR$1,'.','',5, 1, 0)
.     for EACH_LETTER = 1, len(STR$1)
.       ifthen (numbr(substr(STR$1, EACH_LETTER , 2)) ge 48 and le 57)   USER_ID = USER_ID + char(numbr(substr(STR$1, EACH_LETTER , 2)))
.       elseif (numbr(substr(STR$1, EACH_LETTER , 2)) ge 65 and le 90)   USER_ID = USER_ID + char(numbr(substr(STR$1, EACH_LETTER , 2)))
.       elseif (numbr(substr(STR$1, EACH_LETTER , 2)) ge 97 and le 99)   USER_ID = USER_ID + char(numbr(substr(STR$1, EACH_LETTER , 2)))
.       elseif (numbr(substr(STR$1, EACH_LETTER , 3)) ge 100 and le 122) USER_ID = USER_ID + char(numbr(substr(STR$1, EACH_LETTER , 3)))
.       else
.        USER_ID = USER_ID + substr(STR$1, EACH_LETTER , 1)
.       endif
.     end for
.     USER_ID = pack('U' + USER_ID)
.     ANY_NUM__4 =  globals("USER_ID", USER_ID)
.     ANY_NUM__4 =  globals("SESSION_ID", datec(today(0), 'yyyymmdd') + timec(now(0), 'HHMMSS'))
.     GOON__4  = 1
.     EXIT REC
.   endif
. end rec
. ifthen (GOON__4 eq 0)
.   ANY_NUM__4 =  globals('GSOMEMESS', 'Either the USER_NAME and password is incorrect.')
.   ANY_NUM__4 =  globaln('GOON__4', 0)
.   open badLogins append lrecl = 300
.     write (badLogins) [datec(today(0), 'mm/dd/yyyy')] 14t USER_NAME__4 50t PASSWORD__4
.   close badLogins
. else
.   ANY_NUM__4 =  globaln('GOON__4', 1)
. endif
end retrieval

CIF EQ 0<GOON__4>, 0
. CALL WPF.CONNECTIONS.DISCONNECT_ALL_DBS
. CALL WPF.INC_BODY_FORMS.LOGIN_DYNAMIC
CIF END
END PROCEDURE
