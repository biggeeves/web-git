PROCEDURE      INC_BODY_DBA.VAR_NAME_FREQ:T  (157221,44073)  |Last amended Mar 29, 2013,12:14:33
| Varname Frequencies.  How many times is a var name used.
| Dump all of the var names to an array, sort the array.  Second arry holds varname, table, and sum from first array.

program crwarn progress
CALL WPF.SYSTEM.DEFINE_VARS
string  * 32  array AVARNAME (50)
integer * 4   array AVARNAME# (50)
string  * 36  array ALLVARS (50)
integer *  4  SOMENUM
string  * 32  UNIQUE_NAME
integer *  2  DUPLICATE_COUNT
CALL WPF.SYSTEM.INI_VARS
TIME1__4 = now(0)
SOMENUM =0

c . write(cgi) '<h3>Variable Name Frequencies in ' DB_NAME__4 ' Database </h3>'
|Index of Record Types
. for EACH_RECORD_NUMBER = 1 - dbtype(0), nrecs(0)
.   IF (NOW(0) GT TIME1__4 +60 ) EXIT PROGRAM | 60 SECONDS IS TOO LONG TO WAIT ON THE WEB.
.   for EACH_VARIABLE = 1, nvarsc(EACH_RECORD_NUMBER)
.     VNAME$ = trimr(varnamec(EACH_RECORD_NUMBER, EACH_VARIABLE))
.     VAR_LABEL = trimr(varlabsc(EACH_RECORD_NUMBER, VNAME$))
.     SOMENUM = SOMENUM + 1
.     ALLVARS(SOMENUM) = VNAME$
.     ANY_NUM__4 = arrdimsz('ALLVARS', 1) + 50
.     if (SOMENUM gt arrdimsz('ALLVARS', 1) -20) redefine array 'ALLVARS' (ANY_NUM__4)
.   end for
. end for
. redefine array 'AVARNAME' (arrdimsz('ALLVARS', 1))
. redefine array 'AVARNAME#' (arrdimsz('ALLVARS', 1))

. sort ALLVARS

. UNIQUE_NAME = ''
. SOMENUM  = 1
. for EE= 1,  arrdimsz('ALLVARS', 1)
.   ifthen (ALLVARS(EE) = UNIQUE_NAME)
.     DUPLICATE_COUNT = DUPLICATE_COUNT +1
.     NEXT FOR
.   else
.     AVARNAME(SOMENUM) = UNIQUE_NAME
.     AVARNAME# (SOMENUM) = DUPLICATE_COUNT
.     SOMENUM = SOMENUM + 1
.     DUPLICATE_COUNT = 1
.     UNIQUE_NAME = ALLVARS(EE)
.   ENDIF
. end for

. write (cgi) '<h3>Variable Names In Multiple Record Types</h3>'
. write (cgi) '<table class="table table-striped table-hover" >'
. write (cgi) '<tr><th>Variable Name</th><th>Count if gt 0</th></tr>'
. for EACH_NUMBER = 1,  arrdimsz('AVARNAME#', 1)
.   if (AVARNAME#(EACH_NUMBER) eq 1) NEXT FOR |SHOW MULTS AT THE TOP
.   ifthen (exists(AVARNAME#(EACH_NUMBER)) eq 1)
.     execute subprocedure WRITE_ROW
.   endif
. end for
CIF EQ 1,2  | IF YOU WANT UNIQU VAR NAMES TOO
. write(cgi) '<tr><td colspan ="3" class="key">Variables with unique names</td></tr>'
. for EACH_NUMBER = 1, arrdimsz('AVARNAME#', 1)
.   ifNOT (AVARNAME#(EACH_NUMBER) eq 1) NEXT FOR |SHOW UNIQUE VARS AT THE BOTTOM
.   ifthen (exists(AVARNAME(EACH_NUMBER)) eq 1)
.     execute subprocedure WRITE_ROW
.   endif
. end for
CIF END
. write (cgi) '</table>'


. subprocedure WRITE_ROW

.   STR$1 = '<tr><td>'
.   execute subroutine WPF.TOOLS.HTMLTEXT (AVARNAME(EACH_NUMBER), 1) RETURNING (HTMLTEXT, RET_CODE__4)
.   if(RET_CODE__4 eq 0) STR$1 =  STR$1 + HTMLTEXT; RET_CODE__4 = -1
.   STR$1 = STR$1 + '</td><td>'
c .   execute subroutine WPF.TOOLS.HTMLTEXT (AVARNAME#(EACH_NUMBER), 1) RETURNING (HTMLTEXT, RET_CODE__4)
c .   if(RET_CODE__4 eq 0) STR$1 =  STR$1 + HTMLTEXT
c .   STR$1 = STR$1 + '</td><td>'
.   execute subroutine WPF.TOOLS.HTMLTEXT (format(AVARNAME#(EACH_NUMBER)) , 1) RETURNING (HTMLTEXT, RET_CODE__4)
.   if(RET_CODE__4 eq 0) STR$1 =  STR$1 + HTMLTEXT; RET_CODE__4 = -1
.   write (cgi) STR$1 '</td></tr>'
. end subprocedure

end program
END PROCEDURE
