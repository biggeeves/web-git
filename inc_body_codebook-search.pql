PROCEDURE      INC_BODY_CODEBOOK.SEARCH:T  (157459,46198)  |Last amended Nov 22, 2013,12:49:58
c Searches Codebook.

program crwarn
CALL WPF.SYSTEM.DEFINE_VARS
CALL WPF.SYSTEM.INI_VARS

. set COUNTS__4   (0)

. FIND_TEXT__4 = fst(trimlr(sglobal('GSEARCHTEXT')), '')
C write 'text: <GSEARCHTEXT><br> VL: <GVARLABELS><BR> VN: <GVARNAMES><BR>VL: <GVALUELABELS><BR>V:<GVALUES>'

. write(cgi)'<h3>Search Code Book </h3>'
. write(cgi)'<br>'
. write(cgi) '<form action="<mycgi>" method="post">'
. write(cgi) '  <input type="hidden" name="member" value="WPF.INC_BODY_CODEBOOK.SEARCH">'
. write(cgi) '  <input type="submit" value="Search" class="btn btn-primary">'
. write(cgi) '  <input type="text" name="gsearchtext" value ="' FIND_TEXT__4 '"><br>'
. write(cgi) '  <table>'

. STR$1 = ''; if ('<GVARLABELS>' eq 'on') STR$1 = ' checked'
. if ('<GVARLABELS><GVARNAMES><GVALUELABELS><GVALUES>' ='') STR$1 = ' checked'
. write(cgi) '  <tr><td class="right"><input type="checkbox" name="gvarlabels" id="gvarlabels"' STR$1 '></td>'
. write(cgi) '  <td><label for="gvarlabels">Variable label</label></td></tr>'

. STR$1 = ''; if ('<GVARNAMES>' eq 'on') STR$1 = ' checked'
. write(cgi) '  <tr><td class="right"><input type="checkbox" name="gvarnames" id="gvarnames"'STR$1'></td>'
. write(cgi) '  <td><label for="gvarnames">Variable Name</label></td></tr>'

. STR$1 = ''; if ('<GVALUELABELS>' eq 'on') STR$1 = ' checked'
. write(cgi) '  <tr><td class="right"><input type="checkbox" name="gvaluelabels" id="gvaluelabels"' STR$1 '></td>'
. write(cgi) '  <td><label for="gvaluelabels">Value Label</label></td></tr>'

. STR$1 = ''; if ('<GVALUES>' eq 'on') STR$1 = ' checked'
. write(cgi) '  <tr><td class="right"><input type="checkbox" name="gvalues" id="gvalues"' STR$1 '></td>'
. write(cgi) '  <td><label for="gvalues">Defined Values</label></td></tr>'
. write(cgi) '  </table>'

. write(cgi)'</form>'

. ifthen (len(FIND_TEXT__4) gt 0)
.   write(cgi) ' <p>Results for: ' FIND_TEXT__4 '</p>'
.   write(cgi) '  <table class="table table-striped table-hover">'
.   write(cgi) '    <tr><th>Table and Variable</th><th>Variable Label</th><th>Found <br>(may not show everything)</th>'
.   write(cgi) '    <th>Var Label</th><th>Var Name</th><th>Value Label</th><th>Defined Values</th></tr>'
.   compute FIND_TEXT__4  = '@' + upper(pack(FIND_TEXT__4)) + '@'
.   for EACH_RECORD_NUMBER  = 1, nrecs(0)   |rec numbers
.     compute REC_NAME__4 = trimlr(recname(EACH_RECORD_NUMBER))
.     ifnot (len(REC_NAME__4) gt 0) NEXT FOR
.     execute subroutine WPF.TOOLS.HTMLTEXT (REC_NAME__4, 1) RETURNING (HTMLTEXT, RET_CODE__4)
.     if(RET_CODE__4 eq 0) REC_NAME__4 = HTMLTEXT
c     Var names
.     for EACH_VARIABLE = 1, nvarsc(EACH_RECORD_NUMBER)
.       set SCH_VARNAME SCH_VARLABEL SCH_VALVALUE SCH_RANGE (0)
.       ANY_NUM__4 = 0
.       VNAME$ = trimlr(upper(varnamec(EACH_RECORD_NUMBER, EACH_VARIABLE)))
.       if(VNAME$ = 'DCCWHO' or 'DCCTIME' or 'DCCDATE' or 'DCCEDITS' or 'DWHO' or 'DSTAMP') NEXT FOR
.       VAR_LABEL = trimlr(varlabsc(EACH_RECORD_NUMBER, VNAME$))
.       ifthen ('<GVARNAMES>' eq 'on')
.         ifthen (pattern(VNAME$, FIND_TEXT__4) eq 1)
.           STR$2 = VNAME$
.           SCH_VARNAME  = 1
.         endif
.       endif
c       Var labels
.       ifthen ('<GVARLABELS>' eq 'on')
.         ifthen (pattern(upper(varlabsc(EACH_RECORD_NUMBER, VNAME$)), FIND_TEXT__4) eq 1)
.           STR$2 = VAR_LABEL
.           SCH_VARLABEL = 1
.         endif
.       endif
c       Value labels
.       ifthen ('<GVALUELABELS>'EQ 'on')
.         for EACH_VALUE_LABEL = 1, nvallab(EACH_RECORD_NUMBER, VNAME$)
.           ifthen (pattern(upper(vallabsn(EACH_RECORD_NUMBER, VNAME$, EACH_VALUE_LABEL)), FIND_TEXT__4) eq 1)
.             SCH_VALVALUE = 1
.             STR$2 = 'value: ' + vallabsv(EACH_RECORD_NUMBER, VNAME$, EACH_VALUE_LABEL) +  ' ' + pack(vallabsn(EACH_RECORD_NUMBER, VNAME$, EACH_VALUE_LABEL))
.           endif
.         end for
c   .       compute VNAME$ = VARNAMEC(EACH_RECORD_NUMBER, EACH_VARIABLE)  | this had to be added too.
c   .       for K = 1, NVALID(EACH_RECORD_NUMBER, VNAME$)      | This checks the valid value labels as well.  they are labels after all.
c   .         ifthen (PATTERN(UPPER(vallabsn(EACH_RECORD_NUMBER, VNAME$, K)), PATTERN) eq 1)
c   .  append item CODEINFO, "Rec: " + REC_NAME__4 + " Var: " + pad(VNAME$, " ", 13, 13)   + "  " + "value: " +  svval(EACH_RECORD_NUMBER, VNAME$, K) +  ' ' + vallabsn(EACH_RECORD_NUMBER, VNAME$, K)
c   .         endif
c   .       end for
.       endif
c   Ranges and Valid Values
.       ifthen ('<GVALUES>' eq 'on')
.         for EACH_VALID_VALUE = 1, nvalid(EACH_RECORD_NUMBER, VNAME$)
.           ifthen (pattern(upper(svval(EACH_RECORD_NUMBER, VNAME$, EACH_VALID_VALUE)), FIND_TEXT__4) eq 1)
.             SCH_RANGE = 1
.             STR$2 = svval(EACH_RECORD_NUMBER, VNAME$, EACH_VALID_VALUE) +  ' ' + pack(vallabsn(EACH_RECORD_NUMBER, VNAME$, EACH_VALID_VALUE))
.           endif
.           ifthen (pattern(upper(format(nvval(EACH_RECORD_NUMBER, VNAME$, EACH_VALID_VALUE))), FIND_TEXT__4) eq 1)
.             SCH_RANGE = 1
.             STR$2 = format(nvval(EACH_RECORD_NUMBER, VNAME$, EACH_VALID_VALUE)) + ' ' +  pack(vallabsn(EACH_RECORD_NUMBER, VNAME$, EACH_VALID_VALUE))
.           endif
.         end for
c         missing values
.         for EACH_MISSING_VALUE = 0, 3
.           ifthen (pattern(upper(miss(EACH_RECORD_NUMBER, VNAME$, EACH_MISSING_VALUE)), FIND_TEXT__4) eq 1)
.             SCH_RANGE = 1
.             STR$2 = miss(EACH_RECORD_NUMBER, VNAME$, EACH_MISSING_VALUE) + ' ' + pack(vallabsc(EACH_RECORD_NUMBER, VNAME$, miss(EACH_RECORD_NUMBER, VNAME$, EACH_MISSING_VALUE)))
.           endif
.         end for
c         ranges
.         ifthen (nglobal('GSEARCHTEXT') eq nmax(EACH_RECORD_NUMBER, VNAME$) or nmin(EACH_RECORD_NUMBER, VNAME$))
.           SCH_RANGE = 1
.           STR$2 = format(nmin(EACH_RECORD_NUMBER, VNAME$)) + ' - '  + format(nmax(EACH_RECORD_NUMBER, VNAME$))
.         endif
.       endif

.       ifthen (1 eq SCH_VARNAME or SCH_VARLABEL or SCH_VALVALUE or SCH_RANGE)
.         execute subroutine WPF.TOOLS.HTMLTEXT (VNAME$, 1) RETURNING (HTMLTEXT, RET_CODE__4)
.         if(RET_CODE__4 eq 0) VNAME$ = HTMLTEXT
.         execute subroutine WPF.TOOLS.HTMLTEXT (VAR_LABEL, 1) RETURNING (HTMLTEXT, RET_CODE__4)
.         if(RET_CODE__4 eq 0) VAR_LABEL = HTMLTEXT
.         execute subprocedure WRITE_ROW
.       endif


.     end for
.   end for
.   ifthen (COUNTS__4 eq 0)
.     write(cgi) '    <tr><td colspan="8">Nothing was found</td></tr>'
.   endif
.   write(cgi) '  </table>'
. endif

. subprocedure WRITE_ROW
.   COUNTS__4 = COUNTS__4 + 1
.   execute subroutine WPF.TOOLS.HTMLTEXT (STR$2, 1) RETURNING (HTMLTEXT, RET_CODE__4)
.   if(RET_CODE__4 eq 0) STR$2 = HTMLTEXT

.   ifthen (ANY_NUM__4 ne EACH_VARIABLE)
.     ANY_NUM__4 = EACH_VARIABLE
.     write(cgi) '  <tr><td>'
.     STR$1 = '<a target="_blank" href="<mycgi>?member=WPF.INC_BODY_CODEBOOK.REC_TYPE&amp;showmenu=0&amp;gdbrec=' +  format(EACH_RECORD_NUMBER)  + '">'
.     write(cgi) 6T STR$1
.     write(cgi) 6T REC_NAME__4 '</a><br> - ' VNAME$    '</td>'
.     ifthen (len(VAR_LABEL) gt 0)
.       write(cgi) '    <td>' VAR_LABEL  '</td>'
.     else
.       write(cgi) '    <td>&nbsp;</td>'
.     endif
.   else
.     write(cgi) 4t RCLASS__4 '<td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>'
.   endif
.   STR$2 = replace(STR$2, FIND_TEXT__4, '<div class="textbold">' + FIND_TEXT__4  + '</div>', 1, 6, 0)
.   write(cgi) '    <td>' STR$2 '</td>'
.   ifthen (SCH_VARLABEL eq 1) write(cgi) '    <td>&#10003;</td>'
.   else write(cgi) '    <td>&nbsp;</td>'
.   endif
.   ifthen (SCH_VARNAME eq 1) write(cgi) '    <td>&#10003;</td>'
.   else write(cgi) '    <td>&nbsp;</td>'
.   endif
.   ifthen (SCH_VALVALUE eq 1) write(cgi) '    <td>&#10003;</td>'
.   else write(cgi) '    <td>&nbsp;</td>'
.   endif
.   ifthen (SCH_RANGE eq 1) write(cgi) '    <td>&#10003;</td>'
.   else write(cgi) '    <td>&nbsp;</td>'
.   endif
.   write(cgi) '    </tr>'

. end subprocedure

end program
END PROCEDURE
